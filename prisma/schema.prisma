generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  @@map("users")
}

model List {
  id    String  @id @default(uuid())
  title String  @unique
  icon  String?
  color String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  items ListItem[] @relation("list_items")

  @@map("lists")
}

model ListItem {
  id          String  @id @default(uuid())
  listId      String
  title       String
  isCompleted Boolean @default(false) @map("is_completed")
  note        String?
  quantity    Float?
  unit        String? // e.g., "kg", "pcs"
  photoUrl    String? @map("photo_url")
  price       Float?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  list List @relation("list_items", fields: [listId], references: [id], onDelete: Cascade)

  @@map("list_items")
}

model ProductSuggestion {
  id         String           @id @default(uuid())
  title      String           @unique
  emoji      String?
  categoryId String?          @map("category_id")
  category   ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product_suggestions")
}

model ProductCategory {
  id       String              @id @default(uuid())
  name     String              @unique
  products ProductSuggestion[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product_categories")
}
